syntax = "proto3";

option csharp_namespace = "ExcelMinder.Shared";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service StockSimulator {
  // Returns a list of available stocks
  rpc ListSymbols(SymbolListRequest) returns (StockList) {
    option (google.api.http) = {
      post: "/v1/stock/list-symbols"
      body: "*"
    };
  }
  rpc ListSymbolsUpdates(SymbolListRequest) returns (stream StockList) {}

  // Add a stock to the list of available stocks 
  rpc AddStocks(Stock) returns (google.protobuf.Empty) {}

  // Returns the current price of a stock
  rpc GetStockPrice(StockRequest) returns (StockPrice) {
    option (google.api.http) = {
      post: "/v1/stock/stock-price"
      body: "*"
    };
  }
  rpc GetStockPriceUpdates(StockRequest) returns (stream StockPriceSnapshot) {}

  // Executes a trade on the stock market
  rpc ExecuteTrade(TradeRequest) returns (TradeResponse) {}

  rpc LastTradeRequests(PageRequest) returns (TradeRequestList) {
    option (google.api.http) = {
      post: "/v1/trade/list-trade-orders"
      body: "*"
    };
  }
  
  rpc LastExecutedTrades(PageRequest) returns (TradeResponseList) {
    option (google.api.http) = {
      post: "/v1/trade/last-executed-trades"
      body: "*"
    };
  }
  
  
  // TODO: Move to a separate service
  
}

message StockList {
  repeated Stock stocks = 1;
}

message Stock {
  string symbol = 1;
  string name = 2;
}

message StockRequest {
  string symbol = 1;
}

message SymbolListRequest {
  string prefix = 1;
  uint32 pageSize = 2;
}

message StockPrice {
  string symbol = 1;
  // TODO: Use a WKT decimal type
  float price = 2;
  google.protobuf.Timestamp timestamp = 30;
}

message StockPriceSnapshot {
  google.protobuf.Timestamp timestamp = 1;
  repeated string symbols = 2;
  repeated StockPrice prices = 3;
}

message TradeRequest {
  string symbol = 1;
  int64 quantity = 2;
  TradeType type = 3;
  float price = 4;
}

message TradeResponse {
  string symbol = 1;
  int64 quantity = 2;
  TradeType type = 3;
  float price = 4;
  float total_cost = 5;
  google.protobuf.Timestamp timestamp = 6;
}

enum TradeType {
  BUY = 0;
  SELL = 1;
}

message PageRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message TradeRequestList {
  repeated TradeRequest trades = 1;
}

message TradeResponseList {
  repeated TradeResponse trades = 1;
}

// TODO: Move to a separate proto file
// External APIs (derived from Alpha Vantage messages

message RealtimeCurrencyExchangeRate {
  string from_currency_code = 1;
  string from_currency_name = 2;
  string to_currency_code = 3;
  string to_currency_name = 4;
  double exchange_rate = 5;
  string last_refreshed = 6;
  string time_zone = 7;
  double bid_price = 8;
  double ask_price = 9;
}

// TODO: Move to a separate proto file
// Excel communication messages

message CellProperties {
  message FontStyle {
    bool bold = 1;
    bool italic = 2;
    int32 underline = 3;
  }
  enum LineStyle {
    NONE = 0;
    SOLID = 1;
    DASHED = 2;
    DOTTED = 3;
    DOUBLE = 4;
    DASH_DOTTED = 5;
    DASH_DOT_DOTTED = 6;
    SLANT_DASH_DOTTED = 7;
  }
  message Border {
    message BorderProperties {
      double color = 1;
      double thickness = 2;
      LineStyle lineStyle = 3;
    }
    BorderProperties all = 1;
    BorderProperties top = 2;
    BorderProperties bottom = 3;
    BorderProperties left = 4;
    BorderProperties right = 5;
  }
  double background_color = 1;
  string font = 2;
  FontStyle font_style = 3;
  double text_color = 4;
  string cell_value = 5;
  double cell_weight = 6;
  double cell_height = 7;
  Border border = 8;
}

message ExcelReport {
  string report_id = 1;
  repeated CellProperties cell_properties = 2;
} 