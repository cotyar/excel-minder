<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0-windows</TargetFramework>
        <Nullable>enable</Nullable>
        <ServerGarbageCollection>true</ServerGarbageCollection>
        <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <SpaProxyServerUrl>https://localhost:44481</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="CsvHelper" Version="30.0.1" />
        <PackageReference Include="ExcelDna.AddIn" Version="1.6.0" />
        <PackageReference Include="ExcelDna.Integration" Version="1.6.0" />
        <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="7.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="7.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Grpc.JsonTranscoding" Version="7.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Grpc.Swagger" Version="0.3.1" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="7.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="7.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="5.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.1" />

        <PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="7.0.0" />
        <PackageReference Include="Microsoft.Orleans.OrleansGoogleUtils" Version="3.6.5" />
        <PackageReference Include="Microsoft.Orleans.Serialization.SystemTextJson" Version="7.0.0" />
        <PackageReference Include="Microsoft.Orleans.Server" Version="7.0.0" />
        <PackageReference Include="Microsoft.Orleans.Streaming" Version="7.0.0" />
        
        <PackageReference Include="Grpc.AspNetCore" Version="2.51.0" />
        <PackageReference Include="Grpc.AspNetCore.Server.Reflection" Version="2.51.0" />
        <PackageReference Include="Grpc.AspNetCore.Web" Version="2.51.0" />

        <PackageReference Include="Grpc.Tools" Version="2.51.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        
        <PackageReference Include="System.Text.Json" Version="7.0.1" />
        <PackageReference Include="Protobuf.System.Text.Json" Version="1.1.0" />

    </ItemGroup>

    <ItemGroup>
        <None Update="app.db" CopyToOutputDirectory="PreserveNewest" ExcludeFromSingleFile="true" />
    </ItemGroup>
    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="..\..\data\digital_currency_list.csv">
          <Link>Data\Files\digital_currency_list.csv</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="..\..\data\listing_status.csv">
          <Link>Data\Files\listing_status.csv</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="..\..\data\physical_currency_list.csv">
          <Link>Data\Files\physical_currency_list.csv</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="..\.dockerignore">
          <Link>.dockerignore</Link>
        </Content>
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <Protobuf Include="../ExcelMinder.Shared/Protos/greet.proto" ProtoRoot="../ExcelMinder.Shared/Protos" GrpcServices="Both" />
        <Protobuf Include="../ExcelMinder.Shared/Protos/stock_simulator.proto" ProtoRoot="../ExcelMinder.Shared/Protos" GrpcServices="Both" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\ExcelMinder.Shared\ExcelMinder.Shared.csproj" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
